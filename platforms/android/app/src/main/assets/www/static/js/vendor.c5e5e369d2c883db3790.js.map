{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/babel-runtime/core-js/promise.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/core-js/library/modules/_an-instance.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/m3u8-parser/es5/parser.js","webpack:///./node_modules/core-js/library/modules/_microtask.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/pkcs7/lib/unpad.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/aes-decrypter/es5/async-stream.js","webpack:///./node_modules/babel-runtime/core-js/object/define-property.js","webpack:///./node_modules/pkcs7/lib/pad.js","webpack:///./node_modules/core-js/library/modules/es6.promise.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/m3u8-parser/es5/parse-stream.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/babel-runtime/helpers/toConsumableArray.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/aes-decrypter/es5/aes.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/core-js/library/modules/_task.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_for-of.js","webpack:///./node_modules/m3u8-parser/es5/index.js","webpack:///./node_modules/core-js/library/modules/_object-pie.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/fn/object/values.js","webpack:///./node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/core-js/library/fn/promise.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/library/fn/object/assign.js","webpack:///./node_modules/aes-decrypter/es5/stream.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/aes-decrypter/es5/index.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/babel-runtime/helpers/defineProperty.js","webpack:///./node_modules/core-js/library/modules/_set-species.js","webpack:///./node_modules/babel-runtime/core-js/array/from.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/core-js/library/modules/_perform.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/m3u8-parser/es5/stream.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/core-js/library/modules/es7.object.values.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/m3u8-parser/es5/line-stream.js","webpack:///./node_modules/babel-runtime/core-js/object/values.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/pkcs7/lib/pkcs7.js","webpack:///./node_modules/core-js/library/modules/_user-agent.js","webpack:///./node_modules/core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/library/modules/_invoke.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/core-js/library/modules/_species-constructor.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/aes-decrypter/es5/decrypter.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/babel-runtime/core-js/object/assign.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_redefine-all.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js"],"names":["inspectMp4","textifyMp4","toUnsigned","__webpack_require__","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","parseType","buffer","result","String","fromCharCode","findBox","data","path","i","size","type","end","subresults","results","length","byteLength","subarray","push","slice","concat","parse","avc1","view","DataView","byteOffset","dataReferenceIndex","getUint16","width","height","horizresolution","vertresolution","frameCount","depth","config","avcC","numOfPictureParameterSets","nalSize","offset","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","Uint8Array","btrt","bufferSizeDB","getUint32","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","decodeURIComponent","escape","mdat","nals","avcStream","avcView","nalParse","mdhd","language","creationTime","modificationTime","timescale","duration","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","Math","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","Array","join","map","index","Object","keys","filter","key","prefix","value","bytes","prototype","call","byte","toString","match","line","JSON","stringify","split","module","exports","inspect","textify","parseTraf","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","defineProperty","get","a","aFunction","fn","that","undefined","b","c","apply","arguments","global","hide","Iterators","TO_STRING_TAG","DOMIterables","NAME","Collection","proto","default","__esModule","startTime","compositionStartTime","getVideoTrackIds","getTracks","toHexString","mp4Inspector","init","reduce","id","fragment","trafs","baseTimes","scale","Infinity","min","isFinite","timescales","trafBoxes","parsedTraf","videoTrackIds","forEach","hdlrs","tkhds","tracks","track","codec","codecConfig","codecBox","test","replace","warn","condition","message","isError","err","indexOf","isExtendedError","constructor","_name","extend","View","functional","props","render","_","ref","children","parent","routerView","h","$createElement","route","$route","cache","_routerViewCache","inactive","_routerRoot","vnodeData","$vnode","keepAlive","_directInactive","_inactive","$parent","routerViewDepth","cachedData","cachedComponent","component","configProps","fillPropsinData","matched","components","registerRouteInstance","vm","val","current","instances","hook","prepatch","vnode","componentInstance","propsToPass","params","resolveProps","attrs","encodeReserveRE","encodeReserveReplacer","charCodeAt","commaRE","encode","str","encodeURIComponent","decode","parseQuery","query","res","trim","param","parts","shift","isArray","stringifyQuery","obj","val2","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","options","clone","e","meta","hash","fullPath","getFullPath","unshift","formatMatch","freeze","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","every","aVal","bVal","resolvePath","relative","base","append","firstChar","charAt","stack","pop","segments","segment","cleanPath","isarray","arr","pathToRegexp_1","pathToRegexp","parse_1","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","tokens","defaultDelimiter","delimiter","exec","m","escaped","next","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","pretty","token","TypeError","j","attachKeys","re","sensitive","strict","endsWithDelimiter","groups","source","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","create","fillParams","routeMsg","filler","pathMatch","normalizeLocation","raw","_normalized","params$1","rawPath","parsedPath","hashIndex","queryIndex","parsePath","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","_Vue","toTypes","eventTypes","noop","Link","to","required","exact","Boolean","activeClass","exactActiveClass","event","this$1","this","$router","resolve","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","target","queryIncludes","isIncludedRoute","handler","guardEvent","on","click","class","scopedSlot","$scopedSlots","$hasNormal","navigate","isActive","isExactActive","findAnchor","child","$slots","isStatic","aData","handler$1","event$1","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","preventDefault","install","Vue","installed","isDef","registerInstance","callVal","$options","_parentVnode","mixin","beforeCreate","_router","util","defineReactive","history","destroyed","_route","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","inBrowser","window","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","beforeEnter","childMatchAs","alias","aliases","aliasRoute","l","splice","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","len","Time","performance","now","genStateKey","toFixed","_key","getStateKey","setStateKey","positionStore","setupScroll","protocolAndPath","protocol","host","absolutePath","stateCopy","state","replaceState","addEventListener","saveScrollPosition","handleScroll","from","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","hashStartsWithNumberRE","isObject","selector","el","document","getElementById","querySelector","docRect","documentElement","getBoundingClientRect","elRect","left","top","getElementPosition","scrollTo","ua","supportsPushState","navigator","userAgent","pushState","url","runQueue","queue","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","cid","once","resolvedDef","hasSymbol","Symbol","toStringTag","resolved","reject","reason","msg","Error","comp","flatten","called","args","NavigationDuplicated","normalizedLocation","writable","configurable","__proto__","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","max","updated","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","cbs","isValid","poll","_isBeingDestroyed","setTimeout","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","expectScroll","supportsScroll","initLocation","getLocation","go","n","fromRoute","getCurrentLocation","decodeURI","pathname","search","HashHistory","fallback","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","searchIndex","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","mode","prototypeAccessors","registerHook","list","$once","setupHashListener","beforeEach","beforeResolve","afterEach","Promise","back","forward","getMatchedComponents","createHref","normalizedTo","defineProperties","use","__webpack_exports__","isFunction","parseHeaders","xtend","initParams","uri","callback","createXHR","_createXHR","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","nodeName","getXml","isJson","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","code","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","f","getOwnPropertySymbols","createError","validateStatus","request","it","Constructor","forbiddenField","StreamTypes","handleRollover","probe","ts","aac","ONE_SECOND_IN_TS","parseAudioPes_","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","audio","parseVideoPes_","frame","pes","currentFrame","video","firstKeyFrame","set","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","baseTimestamp","isLikelyAacData","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","px","random","classof","ITERATOR","getIteratorMethod","utils","normalizedName","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","__WEBPACK_IMPORTED_MODULE_1_global_document__","__WEBPACK_IMPORTED_MODULE_1_global_document___default","__WEBPACK_IMPORTED_MODULE_2_safe_json_parse_tuple__","__WEBPACK_IMPORTED_MODULE_2_safe_json_parse_tuple___default","__WEBPACK_IMPORTED_MODULE_3_keycode__","__WEBPACK_IMPORTED_MODULE_3_keycode___default","__WEBPACK_IMPORTED_MODULE_4_xhr__","__WEBPACK_IMPORTED_MODULE_4_xhr___default","__WEBPACK_IMPORTED_MODULE_5_videojs_vtt_js__","__WEBPACK_IMPORTED_MODULE_5_videojs_vtt_js___default","__WEBPACK_IMPORTED_MODULE_6_url_toolkit__","__WEBPACK_IMPORTED_MODULE_6_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_7_m3u8_parser__","__WEBPACK_IMPORTED_MODULE_8_mpd_parser__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_tools_mp4_inspector__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_tools_mp4_inspector___default","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_mp4_probe__","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_mp4_probe___default","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_mp4_caption_parser__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_mp4_caption_parser___default","__WEBPACK_IMPORTED_MODULE_12_mux_js_lib_tools_ts_inspector_js__","__WEBPACK_IMPORTED_MODULE_12_mux_js_lib_tools_ts_inspector_js___default","__WEBPACK_IMPORTED_MODULE_13_aes_decrypter__","LogByTypeFactory","log","level","lvl","levels","lvlRegExp","createLogger","logByType","_len","subname","all","off","debug","DEFAULT","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","object","each","assign","sources","isPlain","computedStyle","prop","getComputedStyle","computedStyleValue","getPropertyValue","isNonBlankString","throwIfWhitespace","isReal","isEl","nodeType","isInFrame","self","createQuerier","context","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","parentNode","rect","k","parseFloat","findPosition","docEl","clientLeft","scrollLeft","clientTop","scrollTop","round","getPointerPosition","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","buttons","videojs","$","$$","Dom","_windowLoaded","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","removeEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","vdata","floor","_proto","access","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","uid","bound","throttle","last","debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","isEvented","eventBusEl_","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toLowerCase","string","w","toTitleCase","mergeOptions","Component","play","player_","parentComponent_","options_","id_","SetSham","name_","el_","children_","childIndex_","childNameIndex_","Set","set_","_proto2","thisArg","setTimeoutIds_","setIntervalIds_","rafIds_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","cancelAnimationFrame","_this4","_ref","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","_inheritsLoose","subClass","superClass","_setPrototypeOf","o","p","setPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","Function","_assertThisInitialized","ReferenceError","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","acc","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","isEventKey","focusIndex","focusableEls","focusableEls_","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","div","addToBody","innerHTML","details","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","responseBody","loaded_","tech_","TextTrack","_Track","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","s","gm","gh","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","sizeKey","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","liveEdgeWindow","seekableIncrement_","trackLive_","pastSeekEnd_","mid","sortedList","newSeekEnd","lastSeekEnd_","seekableIncrementList_","abs","sort","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this8","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","q","callbacks","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","writeable","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","classCallCheck","createClass","protoProps","staticProps","inherits","possibleConstructorReturn","slicedToArray","_arr","_n","_d","_e","_s","done","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","playlist","playlists","endList","mediaSequence","mergedPlaylist","updateSegments","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","addParser","mapper","addTagMapper","manifest","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","delay","mediaChange","started","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","intervalDuration","endSequence","expired","backward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","segmentXhrHeaders","byterange","byterangeEnd","Range","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","initSegment","segmentKeyId","hexDump","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","Stream","pipe","destination","flushSource","partialFlush","endTimeline","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","pasp","payload","setUint32","audioobjecttype","samplingfrequencyindex","trackFragments","avc1Box","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","sarRatio","hSpacing","vSpacing","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalCount","nalUnitType","currentGop","gops","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","count","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","timelineStartPts","keepOriginalTimestamps","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$1","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","METADATA_STREAM_TYPE","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","dispatchType","chunk","frameStart","dataAlignmentIndicator","d","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","processPes_","STREAM_TYPES","h264","adts","timedMetadata","stream$$1","forceFlush","packetFlushable","packetData","ptsDtsFlags","packetLength","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES","handlePartialSegments","frameNum","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","ONE_SECOND_IN_TS$3","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","MessageHandlers","transmuxer$$1","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","pair","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","requestSidx_","sidxRange","finishProcessingFn","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","sidxMapping","sidxKey","sidxRequestFinished_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","filterChangedSidxMappings","updatedMaster","mediaUri","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","disposeFn","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decrypted","keyBytes","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","isInitialized","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","clearAllCaptions","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","timeline","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","clearParsedCaptions","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","segmentTimestampInfo","ptsStartTime","dtsStartTime","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","RESOLUTION","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","loadHandler","errorHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter$$1","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","requestOptions","initialize","_settings$mediaTypes$","variantLabel","_settings$mediaTypes$2","forced","autoselect","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","emptyObject","isUndef","isTrue","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","toNumber","makeMap","expectsLowerCase","isBuiltInTag","isReservedAttribute","hasOwn","cached","camelizeRE","camelize","capitalize","hyphenateRE","hyphenate","boundFn","toArray","_from","toObject","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","silent","productionTip","devtools","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","bailRE","_isServer","hasProto","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","isFF","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","ownKeys","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","targetStack","pushTarget","popTarget","VNode","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","createEmptyVNode","createTextVNode","cloneVNode","cloned","arrayProto","arrayMethods","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","copyAugment","walk","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","setter","childOb","dependArray","newVal","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","dedupeHooks","mergeAssets","key$1","inject","computed","provide","defaultStrat","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","stringIndex","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","cur","errorCaptured","globalHandleError","invokeWithErrorHandling","_handled","logError","timerFunc","isUsingMicroTask","flushCallbacks","copies","MutationObserver","setImmediate","counter","observer","textNode","characterData","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","createOnceHandler","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","_isVList","resolveInject","provideKey","_provided","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","bindObject","scopedSlotFn","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","prependModifier","symbol","installRenderHelpers","_o","_l","_t","_q","_m","_f","_k","_b","_v","_u","_g","_p","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","cloneAndMarkFunctionalResult","renderContext","mergeProps","componentVNodeHooks","hydrating","_isDestroyed","mountedNode","_isComponent","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","factory","errorComp","currentRenderingInstance","owners","loading","loadingComp","timerLoading","timerTimeout","$on","forceRender","renderCompleted","ensureCtor","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","extractPropsFromVNodeData","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","registerDeepBindings","_createElement","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","_hasHookEvent","$emit","waiting","flushing","currentFlushTimestamp","getNow","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","queueWatcher","oldValue","evaluate","teardown","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","initMixin","dataDef","propsDef","$set","$delete","stateMixin","hookRE","i$1","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","_render","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","mounted","configDef","delete","observable","installedPlugins","_installedPlugins","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","acceptValue","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","nodeOps","multiple","createElementNS","namespace","createComment","newNode","referenceNode","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","updateDOMListeners","normalizeEvents","svgContainer","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","onEnd","transformRE","styles","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","toMs","enter","_leaveCb","cancelled","transition","_enterCb","appearClass","appearToClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","isRenderedModule","inVPre","childrenMatch","fullInvoke","isInitialPatch","isRealElement","oldElm","patchable","i$2","createPatchFunction","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","hasNoMatchingOption","actuallySetSelected","isMultiple","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","dx","dy","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","hasMove","_reflow","propertyName","_hasMove","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","parseText","tagRE","tokenValue","rawTokens","@binding","klass$1","staticKeys","transformNode","classBinding","genData","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","template","isPreTag","root","currentParent","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","for","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","iteratorMatch","iterator1","iterator2","parseFor","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","_warn","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","ctrl","alt","genHandlers","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","dynamicProps","createFunction","createCompileToFunctionFn","compiled","fnGenErrors","baseCompile","finalOptions","tips","tip","compileToFunctions","getShouldDecode","idToTemplate","mount","outerHTML","getOuterHTML","settle","buildURL","buildFullPath","isURLSameOrigin","requestData","requestHeaders","isFormData","auth","Authorization","btoa","paramsSerializer","statusText","timeoutErrorMessage","isStandardBrowserEnv","cookies","xsrfValue","xsrfCookieName","read","xsrfHeaderName","isUndefined","onDownloadProgress","onUploadProgress","upload","cancelToken","__g","_extends","_createClass","_stream2","_interopRequireDefault","_lineStream2","_parseStream2","_classCallCheck","_possibleConstructorReturn","lineStream","uris","currentUri","currentMap","defaultMediaGroups","allowCache","entry","rendition","allow-cache","allowed","endlist","inf","METHOD","URI","IV","media-sequence","discontinuity-sequence","playlist-type","playlistType","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","targetduration","totalduration","cue-out","cue-out-cont","cue-in","cueIn","tagType","macrotask","WebKitMutationObserver","process","isNode","domain","exit","standalone","toggle","task","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","char","setToStringTag","IteratorPrototype","$Object","_get","_x","_x2","_x3","_again","_stream","PADDING","plaintext","padding","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","$export","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","versions","v8","$Promise","newPromiseCapability","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","isReject","chain","ok","reaction","exited","fail","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","C","G","W","F","S","capability","$$reject","iter","iterable","remaining","$index","alreadyCalled","race","serializedParams","isURLSearchParams","isDate","hashmarkIndex","_slicedToArray","parseAttributes","ParseStream","BYTERANGE","_attributes$BYTERANGE","_attributes$BYTERANGE2","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","deepMerge","axiosKeys","otherKeys","g","eval","scrollSetting","","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","core","P","R","finally","onFinally","__e","enhanceError","originURL","msie","urlParsingNode","resolveURL","hostname","port","requestURL","isString","_from2","arr2","reviver","toIObject","arrayIndexOf","IE_PROTO","O","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","segmentCache","parsedCaptions","parsingPartial","isPartial","isNewInit","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","resetCaptionStream","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","defaults","transformRequest","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","transformResponse","maxContentLength","common","Accept","merge","defer","channel","invoke","cel","setTask","clearTask","clearImmediate","MessageChannel","Dispatch","port2","port1","importScripts","cof","propertyIsEnumerable","ArrayProto","valueOf","isArrayIter","anObject","toLength","getIterFn","BREAK","RETURN","iterFn","_parser2","LineStream","isAbsoluteURL","combineURLs","requestedURL","ObjectProto","toInteger","TAG","ARG","T","B","tryGet","callee","alert","confirm","prompt","IObject","defined","DESCRIPTORS","getKeys","gOPS","pIE","$assign","A","K","aLen","getSymbols","isEnum","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","argv","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","_decrypter","_asyncStream","_asyncStream2","bitmap","InterceptorManager","dispatchRequest","mergeConfig","Axios","instanceConfig","interceptors","interceptor","fulfilled","rejected","getUri","dPs","enumBugKeys","Empty","createDict","iframeDocument","iframe","lt","Properties","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","shared","_defineProperty","_defineProperty2","dP","SPECIES","KEY","FormData","URLSearchParams","product","assignValue","Cancel","CancelToken","resolvePromise","throwIfRequested","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","store","USE_SYMBOL","__CANCEL__","SAFE_CLOSING","riter","skipClosing","safe","_objCreate","ParsingError","errorData","parseTimeStamp","input","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","copyright","IE8_DOM_DEFINE","toPrimitive","Attributes","$defineProperty","createDesc","promiseCapability","$values","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","eject","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","baseURLPath","newPath","nextNewline","TO_STRING","pad","unpad","try","callbackfn","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","expProto","virtual","U","un","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","searchInput","hasKeyCode","foundNamedKey","nameOrCode","backspace","pause/break","caps lock","page up","page down","home","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","break","caps","return","spc","spacebar","pgup","pgdn","ins","cmd","$keys","isEntries","ignoreDuplicateOf","expires","secure","cookie","toGMTString","$$resolve","$JSON","createProperty","arrayLike","mapfn","headersArr","isAxiosError","fileName","lineNumber","columnNumber","D","createInstance","defaultConfig","axios","isCancel","promises","spread","_aes2","_pkcs7","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","redefine","$iterCreate","BUGGY","returnThis","Base","IS_SET","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","parseUTCTiming","objects","lists","urlToolkit","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","startRange","endRange","segmentRange","_attributes$timescale","sourceDuration","NOW","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","periodDuration","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","toSegments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","sidxByteRange","sidxEnd","mediaReferences","mergeDiscontiguousPlaylists","_acc$name$segments","addSegmentInfoFromSidx","sidxMatch","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","mainPlaylist","formattedPlaylists","roleLabel","_attributes","formatAudioPlaylist","organizeAudioPlaylists","_attributes2","organizeVttPlaylists","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","segmentTime","nextS","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme","addToUnscopables","iterated","Arguments","transformData","throwIfCancellationRequested","$at","point"],"mappings":"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","file":"static/js/vendor.c5e5e369d2c883db3790.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n  toUnsigned = require('../utils/bin').toUnsigned,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  /**\n   * Returns the string representation of an ASCII encoded four byte buffer.\n   * @param buffer {Uint8Array} a four-byte buffer to translate\n   * @return {string} the corresponding string\n   */\n  parseType = function(buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  },\n  // Find the data for a box specified by its path\n  findBox = function(data, path) {\n    var results = [],\n        i, size, type, end, subresults;\n\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n\n    for (i = 0; i < data.byteLength;) {\n      size  = toUnsigned(data[i]     << 24 |\n                         data[i + 1] << 16 |\n                         data[i + 2] <<  8 |\n                         data[i + 3]);\n\n      type = parseType(data.subarray(i + 4, i + 8));\n\n      end = size > 1 ? i + size : data.byteLength;\n\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    }\n\n    // we've finished searching all of data\n    return results;\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: toUnsigned(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7])\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += toUnsigned(data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11]);\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseType: parseType,\n  findBox: findBox,\n  parseTraf: parse.traf,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = +5d+\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = +E39\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = +ZMJ\n// module chunks = 0","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = +tPU\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/promise.js\n// module id = //Fk\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iterators.js\n// module id = /bQp\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar toHexString = require('../utils/bin').toHexString;\nvar mp4Inspector = require('../tools/mp4-inspector.js');\nvar timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks;\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = mp4Inspector.findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = mp4Inspector.findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = mp4Inspector.findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = mp4Inspector.findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return mp4Inspector.findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = mp4Inspector.findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n * Determine the composition start, in seconds, for an MP4\n * fragment.\n *\n * The composition start time of a fragment can be calculated using the base\n * media decode time, composition time offset, and timescale, as follows:\n *\n * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n *\n * All of the aforementioned information is contained within a media fragment's\n * `traf` box, except for timescale info, which comes from the initialization\n * segment, so a track id (also contained within a `traf`) is also necessary to\n * associate it with a timescale\n *\n *\n * @param timescales {object} - a hash of track ids to timescale values.\n * @param fragment {Unit8Array} - the bytes of a media segment\n * @return {number} the composition start time for the fragment, in seconds\n **/\ncompositionStartTime = function(timescales, fragment) {\n  var trafBoxes = mp4Inspector.findBox(fragment, ['moof', 'traf']);\n  var baseMediaDecodeTime = 0;\n  var compositionTimeOffset = 0;\n  var trackId;\n\n  if (trafBoxes && trafBoxes.length) {\n    // The spec states that track run samples contained within a `traf` box are contiguous, but\n    // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n    // We will assume that they are, so we only need the first to calculate start time.\n    var parsedTraf = mp4Inspector.parseTraf(trafBoxes[0]);\n\n    for (var i = 0; i < parsedTraf.boxes.length; i++) {\n      if (parsedTraf.boxes[i].type === 'tfhd') {\n        trackId = parsedTraf.boxes[i].trackId;\n      } else if (parsedTraf.boxes[i].type === 'tfdt') {\n        baseMediaDecodeTime = parsedTraf.boxes[i].baseMediaDecodeTime;\n      } else if (parsedTraf.boxes[i].type === 'trun' && parsedTraf.boxes[i].samples.length) {\n        compositionTimeOffset = parsedTraf.boxes[i].samples[0].compositionTimeOffset || 0;\n      }\n    }\n  }\n\n  // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n  // specified.\n  var timescale = timescales[trackId] || 90e3;\n\n  // return the composition start time, in seconds\n  return (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = mp4Inspector.findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = mp4Inspector.findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = mp4Inspector.findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = mp4Inspector.parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\n/**\n * Get all the video, audio, and hint tracks from a non fragmented\n * mp4 segment\n */\ngetTracks = function(init) {\n  var traks = mp4Inspector.findBox(init, ['moov', 'trak']);\n  var tracks = [];\n\n  traks.forEach(function(trak) {\n    var track = {};\n    var tkhd = mp4Inspector.findBox(trak, ['tkhd'])[0];\n    var view, version;\n\n    // id\n    if (tkhd) {\n      view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      version = view.getUint8(0);\n\n      track.id = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var hdlr = mp4Inspector.findBox(trak, ['mdia', 'hdlr'])[0];\n\n    // type\n    if (hdlr) {\n      var type = mp4Inspector.parseType(hdlr.subarray(8, 12));\n\n      if (type === 'vide') {\n        track.type = 'video';\n      } else if (type === 'soun') {\n        track.type = 'audio';\n      } else {\n        track.type = type;\n      }\n    }\n\n\n    // codec\n    var stsd = mp4Inspector.findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n    if (stsd) {\n      var sampleDescriptions = stsd.subarray(8);\n      // gives the codec type string\n      track.codec = mp4Inspector.parseType(sampleDescriptions.subarray(4, 8));\n\n      var codecBox = mp4Inspector.findBox(sampleDescriptions, [track.codec])[0];\n      var codecConfig, codecConfigType;\n\n      if (codecBox) {\n        // https://tools.ietf.org/html/rfc6381#section-3.3\n        if ((/^[a-z]vc[1-9]$/i).test(track.codec)) {\n          // we don't need anything but the \"config\" parameter of the\n          // avc1 codecBox\n          codecConfig = codecBox.subarray(78);\n          codecConfigType = mp4Inspector.parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n            track.codec += '.';\n\n            // left padded with zeroes for single digit hex\n            // profile idc\n            track.codec +=  toHexString(codecConfig[9]);\n            // the byte containing the constraint_set flags\n            track.codec += toHexString(codecConfig[10]);\n            // level idc\n            track.codec += toHexString(codecConfig[11]);\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'avc1.4d400d';\n          }\n        } else if ((/^mp4[a,v]$/i).test(track.codec)) {\n          // we do not need anything but the streamDescriptor of the mp4a codecBox\n          codecConfig = codecBox.subarray(28);\n          codecConfigType = mp4Inspector.parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n            track.codec += '.' + toHexString(codecConfig[19]);\n            // this value is only a single digit\n            track.codec += '.' + toHexString((codecConfig[20] >>> 2) & 0x3f).replace(/^0/, '');\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'mp4a.40.2';\n          }\n        } else {\n          // TODO: show a warning? for unknown codec type\n        }\n      }\n    }\n\n    var mdhd = mp4Inspector.findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (mdhd && tkhd) {\n      var index = version === 0 ? 12 : 20;\n\n      track.timescale = toUnsigned(mdhd[index]     << 24 |\n                                   mdhd[index + 1] << 16 |\n                                   mdhd[index + 2] <<  8 |\n                                   mdhd[index + 3]);\n    }\n\n    tracks.push(track);\n  });\n\n  return tracks;\n};\n\nmodule.exports = {\n  // export mp4 inspector's findBox and parseType for backwards compatibility\n  findBox: mp4Inspector.findBox,\n  parseType: mp4Inspector.parseType,\n  timescale: timescale,\n  startTime: startTime,\n  compositionStartTime: compositionStartTime,\n  videoTrackIds: getVideoTrackIds,\n  tracks: getTracks\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","/*!\n  * vue-router v3.1.6\n  * (c) 2020 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction isExtendedError (constructor, err) {\n  return (\n    err instanceof constructor ||\n    // _name is to support IE9 too\n    (err && (err.name === constructor.name || err._name === constructor._name))\n  )\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode ? parent.$vnode.data : {};\n      if (vnodeData.routerView) {\n        depth++;\n      }\n      if (vnodeData.keepAlive && parent._directInactive && parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      var cachedData = cache[name];\n      var cachedComponent = cachedData && cachedData.component;\n      if (cachedComponent) {\n        // #2301\n        // pass props\n        if (cachedData.configProps) {\n          fillPropsinData(cachedComponent, data, cachedData.route, cachedData.configProps);\n        }\n        return h(cachedComponent, data, children)\n      } else {\n        // render previous empty view\n        return h()\n      }\n    }\n\n    var matched = route.matched[depth];\n    var component = matched && matched.components[name];\n\n    // render empty node if no matched route or no config component\n    if (!matched || !component) {\n      cache[name] = null;\n      return h()\n    }\n\n    // cache component\n    cache[name] = { component: component };\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n    };\n\n    var configProps = matched.props && matched.props[name];\n    // save route and configProps in cachce\n    if (configProps) {\n      extend(cache[name], {\n        route: route,\n        configProps: configProps\n      });\n      fillPropsinData(component, data, route, configProps);\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction fillPropsinData (component, data, route, configProps) {\n  // resolve props\n  var propsToPass = data.props = resolveProps(route, configProps);\n  if (propsToPass) {\n    // clone to prevent mutation\n    propsToPass = data.props = extend({}, propsToPass);\n    // pass non-declared props as attrs\n    var attrs = data.attrs = data.attrs || {};\n    for (var key in propsToPass) {\n      if (!component.props || !(key in component.props)) {\n        attrs[key] = propsToPass[key];\n        delete propsToPass[key];\n      }\n    }\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    // and fix #3106 so that you can work with location descriptor object having params.pathMatch equal to empty string\n    if (typeof params.pathMatch === 'string') { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      // Fix #3072 no warn if `pathMatch` is string\n      warn(typeof params.pathMatch === 'string', (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    next = extend({}, raw);\n    var params = next.params;\n    if (params && typeof params === 'object') {\n      next.params = extend({}, params);\n    }\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params$1 = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params$1;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params$1, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar noop = function () {};\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(\n      this.to,\n      current,\n      this.append\n    );\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback =\n      globalActiveClass == null ? 'router-link-active' : globalActiveClass;\n    var exactActiveClassFallback =\n      globalExactActiveClass == null\n        ? 'router-link-exact-active'\n        : globalExactActiveClass;\n    var activeClass =\n      this.activeClass == null ? activeClassFallback : this.activeClass;\n    var exactActiveClass =\n      this.exactActiveClass == null\n        ? exactActiveClassFallback\n        : this.exactActiveClass;\n\n    var compareTarget = route.redirectedFrom\n      ? createRoute(null, normalizeLocation(route.redirectedFrom), null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location, noop);\n        } else {\n          router.push(location, noop);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) {\n        on[e] = handler;\n      });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = { class: classes };\n\n    var scopedSlot =\n      !this.$scopedSlots.$hasNormal &&\n      this.$scopedSlots.default &&\n      this.$scopedSlots.default({\n        href: href,\n        route: route,\n        navigate: handler,\n        isActive: classes[activeClass],\n        isExactActive: classes[exactActiveClass]\n      });\n\n    if (scopedSlot) {\n      if (scopedSlot.length === 1) {\n        return scopedSlot[0]\n      } else if (scopedSlot.length > 1 || !scopedSlot.length) {\n        if (process.env.NODE_ENV !== 'production') {\n          warn(\n            false,\n            (\"RouterLink with to=\\\"\" + (this.to) + \"\\\" is trying to use a scoped slot but it didn't provide exactly one child. Wrapping the content with a span element.\")\n          );\n        }\n        return scopedSlot.length === 0 ? h() : h('span', {}, scopedSlot)\n      }\n    }\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = (a.data = extend({}, a.data));\n        aData.on = aData.on || {};\n        // transform existing events in both objects into arrays so we can push later\n        for (var event in aData.on) {\n          var handler$1 = aData.on[event];\n          if (event in on) {\n            aData.on[event] = Array.isArray(handler$1) ? handler$1 : [handler$1];\n          }\n        }\n        // append new listeners for router-link\n        for (var event$1 in on) {\n          if (event$1 in aData.on) {\n            // on[event] is always a function\n            aData.on[event$1].push(on[event$1]);\n          } else {\n            aData.on[event$1] = handler;\n          }\n        }\n\n        var aAttrs = (a.data.attrs = extend({}, a.data.attrs));\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // warn if routes do not include leading slashes\n    var found = pathList\n    // check for missing leading slash\n      .filter(function (path) { return path && path.charAt(0) !== '*' && path.charAt(0) !== '/'; });\n\n    if (found.length > 0) {\n      var pathNames = found.map(function (path) { return (\"- \" + path); }).join('\\n');\n      warn(false, (\"Non-nested routes must include a leading slash character. Fix the following routes: \\n\" + pathNames));\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(\n        path || name\n      )) + \" cannot be a \" + \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions =\n    route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(path, parent, pathToRegexpOptions.strict);\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props:\n      route.props == null\n        ? {}\n        : route.components\n          ? route.props\n          : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (\n        route.name &&\n        !route.redirect &&\n        route.children.some(function (child) { return /^\\/?$/.test(child.path); })\n      ) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n            \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n            \"the default child route will not be rendered. Remove the name from \" +\n            \"this route and use the name of the default child route for named \" +\n            \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];\n    for (var i = 0; i < aliases.length; ++i) {\n      var alias = aliases[i];\n      if (process.env.NODE_ENV !== 'production' && alias === path) {\n        warn(\n          false,\n          (\"Found an alias with the same value as the path: \\\"\" + path + \"\\\". You have to remove that alias. It will be ignored in development.\")\n        );\n        // skip in dev to make it work\n        continue\n      }\n\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    }\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n          \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (\n  path,\n  pathToRegexpOptions\n) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(\n        !keys[key.name],\n        (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\")\n      );\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (\n  path,\n  parent,\n  strict\n) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n      return _createRoute(record, location, redirectedFrom)\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n// use User Timing api (if present) for more accurate key precision\nvar Time =\n  inBrowser && window.performance && window.performance.now\n    ? window.performance\n    : Date;\n\nfunction genStateKey () {\n  return Time.now().toFixed(3)\n}\n\nvar _key = genStateKey();\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  return (_key = key)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  // Fix for #2774 Support for apps loaded from Windows file shares not mapped to network drives: replaced location.origin with\n  // window.location.protocol + '//' + window.location.host\n  // location.host contains the port and location.hostname doesn't\n  var protocolAndPath = window.location.protocol + '//' + window.location.host;\n  var absolutePath = window.location.href.replace(protocolAndPath, '');\n  // preserve existing history state as it could be overriden by the user\n  var stateCopy = extend({}, window.history.state);\n  stateCopy.key = getStateKey();\n  window.history.replaceState(stateCopy, '', absolutePath);\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(\n      router,\n      to,\n      from,\n      isPop ? position : null\n    );\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll\n        .then(function (shouldScroll) {\n          scrollToPosition((shouldScroll), position);\n        })\n        .catch(function (err) {\n          if (process.env.NODE_ENV !== 'production') {\n            assert(false, err.toString());\n          }\n        });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nvar hashStartsWithNumberRE = /^#\\d/;\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    // getElementById would still fail if the selector contains a more complicated query like #main[data-attr]\n    // but at the same time, it doesn't make much sense to select an element with an id and an extra selector\n    var el = hashStartsWithNumberRE.test(shouldScroll.selector) // $flow-disable-line\n      ? document.getElementById(shouldScroll.selector.slice(1)) // $flow-disable-line\n      : document.querySelector(shouldScroll.selector);\n\n    if (el) {\n      var offset =\n        shouldScroll.offset && typeof shouldScroll.offset === 'object'\n          ? shouldScroll.offset\n          : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState =\n  inBrowser &&\n  (function () {\n    var ua = window.navigator.userAgent;\n\n    if (\n      (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n      ua.indexOf('Mobile Safari') !== -1 &&\n      ua.indexOf('Chrome') === -1 &&\n      ua.indexOf('Windows Phone') === -1\n    ) {\n      return false\n    }\n\n    return window.history && 'pushState' in window.history\n  })();\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      // preserve existing history state as it could be overriden by the user\n      var stateCopy = extend({}, history.state);\n      stateCopy.key = getStateKey();\n      history.replaceState(stateCopy, '', url);\n    } else {\n      history.pushState({ key: setStateKey(genStateKey()) }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\nvar NavigationDuplicated = /*@__PURE__*/(function (Error) {\n  function NavigationDuplicated (normalizedLocation) {\n    Error.call(this);\n    this.name = this._name = 'NavigationDuplicated';\n    // passing the message to super() doesn't seem to work in the transpiled version\n    this.message = \"Navigating to current location (\\\"\" + (normalizedLocation.fullPath) + \"\\\") is not allowed\";\n    // add a stack property so services like Sentry can correctly display it\n    Object.defineProperty(this, 'stack', {\n      value: new Error().stack,\n      writable: true,\n      configurable: true\n    });\n    // we could also have used\n    // Error.captureStackTrace(this, this.constructor)\n    // but it only exists on node and chrome\n  }\n\n  if ( Error ) NavigationDuplicated.__proto__ = Error;\n  NavigationDuplicated.prototype = Object.create( Error && Error.prototype );\n  NavigationDuplicated.prototype.constructor = NavigationDuplicated;\n\n  return NavigationDuplicated;\n}(Error));\n\n// support IE9\nNavigationDuplicated._name = 'NavigationDuplicated';\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (\n  location,\n  onComplete,\n  onAbort\n) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(\n    route,\n    function () {\n      this$1.updateRoute(route);\n      onComplete && onComplete(route);\n      this$1.ensureURL();\n\n      // fire ready cbs once\n      if (!this$1.ready) {\n        this$1.ready = true;\n        this$1.readyCbs.forEach(function (cb) {\n          cb(route);\n        });\n      }\n    },\n    function (err) {\n      if (onAbort) {\n        onAbort(err);\n      }\n      if (err && !this$1.ready) {\n        this$1.ready = true;\n        this$1.readyErrorCbs.forEach(function (cb) {\n          cb(err);\n        });\n      }\n    }\n  );\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    // after merging https://github.com/vuejs/vue-router/pull/2771 we\n    // When the user navigates through history through back/forward buttons\n    // we do not want to throw the error. We only throw it if directly calling\n    // push/replace. That's why it's not included in isError\n    if (!isExtendedError(NavigationDuplicated, err) && isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) {\n          cb(err);\n        });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort(new NavigationDuplicated(route))\n  }\n\n  var ref = resolveQueue(\n    this.current.matched,\n    route.matched\n  );\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' &&\n            (typeof to.path === 'string' || typeof to.name === 'string'))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) {\n            cb();\n          });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(\n    activated,\n    'beforeRouteEnter',\n    function (guard, _, match, key) {\n      return bindEnterGuard(guard, match, key, cbs, isValid)\n    }\n  )\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n      next(cb);\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History ) HTML5History.__proto__ = History;\n  HTML5History.prototype = Object.create( History && History.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History) {\n  function HashHistory (router, base, fallback) {\n    History.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History ) HashHistory.__proto__ = History;\n  HashHistory.prototype = Object.create( History && History.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(\n      supportsPushState ? 'popstate' : 'hashchange',\n      function () {\n        var current = this$1.current;\n        if (!ensureSlash()) {\n          return\n        }\n        this$1.transitionTo(getHash(), function (route) {\n          if (supportsScroll) {\n            handleScroll(this$1.router, route, current, true);\n          }\n          if (!supportsPushState) {\n            replaceHash(route.fullPath);\n          }\n        });\n      }\n    );\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(\n      location,\n      function (route) {\n        pushHash(route.fullPath);\n        handleScroll(this$1.router, route, fromRoute, false);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(\n      location,\n      function (route) {\n        replaceHash(route.fullPath);\n        handleScroll(this$1.router, route, fromRoute, false);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(cleanPath(base + '/#' + location));\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n  // decode the hash but not the search or hash\n  // as search(query) is already decoded\n  // https://github.com/vuejs/vue-router/issues/2708\n  var searchIndex = href.indexOf('?');\n  if (searchIndex < 0) {\n    var hashIndex = href.indexOf('#');\n    if (hashIndex > -1) {\n      href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex);\n    } else { href = decodeURI(href); }\n  } else {\n    href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex);\n  }\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History) {\n  function AbstractHistory (router, base) {\n    History.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History ) AbstractHistory.__proto__ = History;\n  AbstractHistory.prototype = Object.create( History && History.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(\n      location,\n      function (route) {\n        this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n        this$1.index++;\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(\n      location,\n      function (route) {\n        this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(\n      route,\n      function () {\n        this$1.index = targetIndex;\n        this$1.updateRoute(route);\n      },\n      function (err) {\n        if (isExtendedError(NavigationDuplicated, err)) {\n          this$1.index = targetIndex;\n        }\n      }\n    );\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  // $flow-disable-line\n  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      this$1.history.push(location, resolve, reject);\n    })\n  } else {\n    this.history.push(location, onComplete, onAbort);\n  }\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  // $flow-disable-line\n  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      this$1.history.replace(location, resolve, reject);\n    })\n  } else {\n    this.history.replace(location, onComplete, onAbort);\n  }\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(\n    to,\n    current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.1.6';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gops.js\n// module id = 1kS7\n// module chunks = 0","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/settle.js\n// module id = 21It\n// module chunks = 0","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-instance.js\n// module id = 2KxR\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar ONE_SECOND_IN_TS = require('../utils/clock').ONE_SECOND_IN_TS;\n\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n      info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n      info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n      frame.ptsTime = frame.dts / ONE_SECOND_IN_TS;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_uid.js\n// module id = 3Eo+\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 3fs2\n// module chunks = 0","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 4mcu\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_defined.js\n// module id = 52gC\n// module chunks = 0","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/normalizeHeaderName.js\n// module id = 5VQ+\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/array/from.js\n// module id = 5zde\n// module chunks = 0","/**\n * @license\n * Video.js 7.6.6 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.6\";\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap =\n  /*#__PURE__*/\n  function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    var SetSham;\n\n    if (!window$1.Set) {\n      SetSham =\n      /*#__PURE__*/\n      function () {\n        function SetSham() {\n          this.set_ = {};\n        }\n\n        var _proto2 = SetSham.prototype;\n\n        _proto2.has = function has(key) {\n          return key in this.set_;\n        };\n\n        _proto2[\"delete\"] = function _delete(key) {\n          var has = this.has(key);\n          delete this.set_[key];\n          return has;\n        };\n\n        _proto2.add = function add(key) {\n          this.set_[key] = 1;\n          return this;\n        };\n\n        _proto2.forEach = function forEach(callback, thisArg) {\n          for (var key in this.set_) {\n            callback.call(thisArg, key, key, this);\n          }\n        };\n\n        return SetSham;\n      }();\n    }\n\n    this.setTimeoutIds_ = window$1.Set ? new Set() : new SetSham();\n    this.setIntervalIds_ = window$1.Set ? new Set() : new SetSham();\n    this.rafIds_ = window$1.Set ? new Set() : new SetSham();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this4 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        _this4[idName].forEach(_this4[cancelName], _this4);\n      });\n      _this4.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), UPDATE_REFRESH_INTERVAL);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    var sizeKey = this.vertical() ? 'height' : 'width';\n\n    if (style[sizeKey] !== percentage) {\n      style[sizeKey] = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL$1 = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL$1);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL$1);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * Computes the median of an array.\n *\n * @param {number[]} arr\n *        Input array of numbers.\n *\n * @return {number}\n *        Median value.\n */\nvar median = function median(arr) {\n  var mid = Math.floor(arr.length / 2);\n  var sortedList = [].concat(arr).sort(function (a, b) {\n    return a - b;\n  });\n  return arr.length % 2 !== 0 ? sortedList[mid] : (sortedList[mid - 1] + sortedList[mid]) / 2;\n};\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = this.seekableIncrement_ * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        // we try to get the best fit value for the seeking increment\n        // variable from the last 12 values.\n        this.seekableIncrementList_ = this.seekableIncrementList_.slice(-11);\n        this.seekableIncrementList_.push(Math.abs(newSeekEnd - this.lastSeekEnd_));\n\n        if (this.seekableIncrementList_.length > 3) {\n          this.seekableIncrement_ = median(this.seekableIncrementList_);\n        }\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.seekableIncrementList_ = [];\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.6\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].dts,\n            end: frames[0].dts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].dts,\n          end: gops[gops.length - 1].dts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().uri);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.6\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = 63pp\n// module chunks = 0","/*!\n * Vue.js v2.6.11\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (process.env.NODE_ENV !== 'production' && isDef(data) && isDef(data.nativeOn)) {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.11';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:|^#/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /\\s+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anyting as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (name === 'v-slot' || name[0] === '#') {\n            checkFunctionParameterExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stripped = exp.replace(stripStringRE, '');\n  var keywordMatch = stripped.match(unaryOperatorsRE);\n  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\nfunction checkFunctionParameterExpression (exp, text, warn, range) {\n  try {\n    new Function(exp, '');\n  } catch (e) {\n    warn(\n      \"invalid function parameter expression: \" + (e.message) + \" in\\n\\n\" +\n      \"    \" + exp + \"\\n\\n\" +\n      \"  Raw expression: \" + (text.trim()) + \"\\n\",\n      range\n    );\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 77Pl\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/adapters/xhr.js\n// module id = 7GwW\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 7KvD\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parser.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\nvar Parser = function (_Stream) {\n  _inherits(Parser, _Stream);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    var _this = _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).call(this));\n\n    _this.lineStream = new _lineStream2['default']();\n    _this.parseStream = new _parseStream2['default']();\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              this.manifest.dateTimeString = entry.dateTimeString;\n              this.manifest.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  _createClass(Parser, [{\n    key: 'push',\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n  }, {\n    key: 'end',\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    }\n  }]);\n\n  return Parser;\n}(_stream2['default']);\n\nexports['default'] = Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/es5/parser.js\n// module id = 7e9Y\n// module chunks = 0","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_microtask.js\n// module id = 82Mu\n// module chunks = 0","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine.js\n// module id = 880/\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flushCCStreams = function(flushType) {\n  this.ccStreams_.forEach(function(cc) {\n    return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n  }, this);\n};\n\nCaptionStream.prototype.flushStream = function(flushType) {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.flushCCStreams(flushType);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.flushCCStreams(flushType);\n};\n\nCaptionStream.prototype.flush = function() {\n  return this.flushStream('flush');\n};\n\n// Only called if handling partial data\nCaptionStream.prototype.partialFlush = function() {\n  return this.flushStream('partialFlush');\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 8Ig8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 8KjM\n// module chunks = 0","/*\n * pkcs7.unpad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/lib/unpad.js\n// module id = 8xxF\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-create.js\n// module id = 94VQ\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/define-property.js\n// module id = 9bBU\n// module chunks = 0","/**\n * @file async-stream.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = (function (_Stream) {\n  _inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    _classCallCheck(this, AsyncStream);\n\n    _get(Object.getPrototypeOf(AsyncStream.prototype), 'constructor', this).call(this, _stream2['default']);\n    this.jobs = [];\n    this.delay = 1;\n    this.timeout_ = null;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n  _createClass(AsyncStream, [{\n    key: 'processJob_',\n    value: function processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n  }, {\n    key: 'push',\n    value: function push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }]);\n\n  return AsyncStream;\n})(_stream2['default']);\n\nexports['default'] = AsyncStream;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/es5/async-stream.js\n// module id = A3vJ\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/define-property.js\n// module id = C4MV\n// module chunks = 0","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nvar PADDING;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function pad(plaintext) {\n  var padding = PADDING[(plaintext.byteLength % 16) || 0],\n      result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n};\n\n// pre-define the padding values\nPADDING = [\n  [16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16],\n\n  [15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15],\n\n  [14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14],\n\n  [13, 13, 13, 13,\n   13, 13, 13, 13,\n   13, 13, 13, 13,\n   13],\n\n  [12, 12, 12, 12,\n   12, 12, 12, 12,\n   12, 12, 12, 12],\n\n  [11, 11, 11, 11,\n   11, 11, 11, 11,\n   11, 11, 11],\n\n  [10, 10, 10, 10,\n   10, 10, 10, 10,\n   10, 10],\n\n  [9, 9, 9, 9,\n   9, 9, 9, 9,\n   9],\n\n  [8, 8, 8, 8,\n   8, 8, 8, 8],\n\n  [7, 7, 7, 7,\n   7, 7, 7],\n\n  [6, 6, 6, 6,\n   6, 6],\n\n  [5, 5, 5, 5,\n   5],\n\n  [4, 4, 4, 4],\n\n  [3, 3, 3],\n\n  [2, 2],\n\n  [1]\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/lib/pad.js\n// module id = CDvG\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.promise.js\n// module id = CXw9\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = D2L2\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/buildURL.js\n// module id = DQCr\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parse-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  _inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    _classCallCheck(this, ParseStream);\n\n    return _possibleConstructorReturn(this, (ParseStream.__proto__ || Object.getPrototypeOf(ParseStream)).call(this));\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  _createClass(ParseStream, [{\n    key: 'push',\n    value: function push(line) {\n      var match = void 0;\n      var event = void 0;\n\n      // strip whitespace\n      line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      }\n\n      // URIs\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      }\n\n      // Comments\n      if (line.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: line.slice(1)\n        });\n        return;\n      }\n\n      // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n      line = line.replace('\\r', '');\n\n      // Tags\n      match = /^#EXTM3U/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n        if (match[2]) {\n          event.title = match[2];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                _attributes$BYTERANGE2 = _slicedToArray(_attributes$BYTERANGE, 2),\n                length = _attributes$BYTERANGE2[0],\n                offset = _attributes$BYTERANGE2[1];\n\n            event.byterange = {};\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n            event.attributes.RESOLUTION = resolution;\n          }\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ENDLIST/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          // parse the IV string into a Uint32Array\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n\n      // unknown tag type\n      this.trigger('data', {\n        type: 'tag',\n        data: line.slice(4)\n      });\n    }\n  }]);\n\n  return ParseStream;\n}(_stream2['default']);\n\nexports['default'] = ParseStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/es5/parse-stream.js\n// module id = DTJQ\n// module chunks = 0","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/mergeConfig.js\n// module id = DUeU\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-step.js\n// module id = EGZi\n// module chunks = 0","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.finally.js\n// module id = EqBC\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = EqjI\n// module chunks = 0","var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = FeBl\n// module chunks = 0","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/createError.js\n// module id = FtD3\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isURLSameOrigin.js\n// module id = GHBc\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/toConsumableArray.js\n// module id = Gu7T\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = Ibhu\n// module chunks = 0","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/bind.js\n// module id = JP+z\n// module chunks = 0","/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = undefined;\n  var x = undefined;\n  var xInv = undefined;\n  var d = [];\n  var th = [];\n  var x2 = undefined;\n  var x4 = undefined;\n  var x8 = undefined;\n  var s = undefined;\n  var tEnc = undefined;\n  var tDec = undefined;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = (function () {\n  function AES(key) {\n    _classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = undefined;\n    var j = undefined;\n    var tmp = undefined;\n    var encKey = undefined;\n    var decKey = undefined;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n  _createClass(AES, [{\n    key: 'decrypt',\n    value: function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1];\n      // state variables a,b,c,d are loaded with pre-whitened data\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2 = undefined;\n      var b2 = undefined;\n      var c2 = undefined;\n\n      // key.length === 2 ?\n      var nInnerRounds = key.length / 4 - 2;\n      var i = undefined;\n      var kIndex = 4;\n      var table = this._tables[1];\n\n      // load up the tables\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4];\n\n      // Inner rounds. Cribbed from OpenSSL.\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;b = b2;c = c2;\n      }\n\n      // Last round.\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;a = b;b = c;c = d;d = a2;\n      }\n    }\n  }]);\n\n  return AES;\n})();\n\nexports['default'] = AES;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/es5/aes.js\n// module id = JtAc\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n  if (trackId === null) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n  // Stores whether we are receiving partial data or not\n  var parsingPartial;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function(options) {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n    parsingPartial = options ? options.isPartial : false;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one.\n    // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n    } else if (trackId === null || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    if (!parsingPartial) {\n      captionStream.flush();\n    } else {\n      captionStream.partialFlush();\n    }\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = Jyyp\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/defaults.js\n// module id = KCLY\n// module chunks = 0","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_task.js\n// module id = L42u\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iobject.js\n// module id = MU5D\n// module chunks = 0","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array-iter.js\n// module id = Mhyx\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = MmMw\n// module chunks = 0","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_for-of.js\n// module id = NWt+\n// module chunks = 0","'use strict';\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nmodule.exports = {\n  LineStream: _lineStream2['default'],\n  ParseStream: _parseStream2['default'],\n  Parser: _parser2['default']\n}; /**\n    * @file m3u8/index.js\n    *\n    * Utilities for parsing M3U8 files. If the entire manifest is available,\n    * `Parser` will create an object representation with enough detail for managing\n    * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n    * that do not assume the entirety of the manifest is ready and expose a\n    * ReadableStream-like interface.\n    */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/es5/index.js\n// module id = NovD\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-pie.js\n// module id = NpIQ\n// module chunks = 0","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_library.js\n// module id = O4g8\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = ON07\n// module chunks = 0","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/buildFullPath.js\n// module id = Oi+a\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gpo.js\n// module id = PzxK\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-length.js\n// module id = QRG4\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.assign.js\n// module id = R4wc\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_cof.js\n// module id = R9M2\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_html.js\n// module id = RPLV\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = RY/4\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = S82l\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = SfB7\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/utils.js\n// module id = SkH0\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/transformData.js\n// module id = TNV1\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-iobject.js\n// module id = TcQ7\n// module chunks = 0","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/values.js\n// module id = TmV0\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-assign.js\n// module id = To3L\n// module chunks = 0","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/promise.js\n// module id = U5ju\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-integer.js\n// module id = UuGF\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/assign.js\n// module id = V3tA\n// module chunks = 0","/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Stream = (function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      var index = undefined;\n\n      if (!this.listeners[type]) {\n        return false;\n      }\n      index = this.listeners[type].indexOf(listener);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = undefined;\n      var i = undefined;\n      var length = undefined;\n      var args = undefined;\n\n      callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n})();\n\nexports['default'] = Stream;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/es5/stream.js\n// module id = V5sg\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decrypter = require('./decrypter');\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nexports['default'] = {\n  decrypt: _decrypter.decrypt,\n  Decrypter: _decrypter.Decrypter,\n  AsyncStream: _asyncStream2['default']\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/es5/index.js\n// module id = X+xJ\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = X8DO\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nvar toHexString = function(value) {\n  return ('00' + value.toString(16)).slice(-2);\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned,\n  toHexString: toHexString\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/Axios.js\n// module id = XmWM\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-create.js\n// module id = Yobk\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared-key.js\n// module id = ax3d\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/defineProperty.js\n// module id = bOdI\n// module chunks = 0","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-species.js\n// module id = bRrM\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/array/from.js\n// module id = c/Tr\n// module chunks = 0","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/utils.js\n// module id = cGG2\n// module chunks = 0","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/CancelToken.js\n// module id = cWxy\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isAbsoluteURL.js\n// module id = dIwP\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_perform.js\n// module id = dNDb\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks.js\n// module id = dSzd\n// module chunks = 0","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/Cancel.js\n// module id = dVOP\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener);\n\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = this.listeners[type];\n      var i = void 0;\n      var length = void 0;\n      var args = void 0;\n\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n}();\n\nexports['default'] = Stream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/es5/stream.js\n// module id = dXfc\n// module chunks = 0","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-detect.js\n// module id = dY0y\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = e6n0\n// module chunks = 0","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared.js\n// module id = e8AB\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = evD5\n// module chunks = 0","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_create-property.js\n// module id = fBQ2\n// module chunks = 0","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_promise-resolve.js\n// module id = fJUb\n// module chunks = 0","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.object.values.js\n// module id = fZOM\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = fkB2\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/InterceptorManager.js\n// module id = fuGk\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/line-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\nvar LineStream = function (_Stream) {\n  _inherits(LineStream, _Stream);\n\n  function LineStream() {\n    _classCallCheck(this, LineStream);\n\n    var _this = _possibleConstructorReturn(this, (LineStream.__proto__ || Object.getPrototypeOf(LineStream)).call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  _createClass(LineStream, [{\n    key: 'push',\n    value: function push(data) {\n      var nextNewline = void 0;\n\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }]);\n\n  return LineStream;\n}(_stream2['default']);\n\nexports['default'] = LineStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/es5/line-stream.js\n// module id = gInR\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/values.js\n// module id = gRE1\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_string-at.js\n// module id = h65t\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = hJx8\n// module chunks = 0","/*\n * pkcs7\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nexports.pad = require('./pad.js');\nexports.unpad = require('./unpad.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/lib/pkcs7.js\n// module id = iKht\n// module chunks = 0","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_user-agent.js\n// module id = iUbK\n// module chunks = 0","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.try.js\n// module id = jKW+\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = kM2E\n// module chunks = 0","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_invoke.js\n// module id = knuC\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = lOnJ\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = lamJ\n// module chunks = 0","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keycode/index.js\n// module id = ljAp\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys.js\n// module id = lktj\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = mClu\n// module chunks = 0","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-to-array.js\n// module id = mbce\n// module chunks = 0","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-call.js\n// module id = msXi\n// module chunks = 0","module.exports = require('./lib/axios');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/index.js\n// module id = mtWM\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/json/stringify.js\n// module id = mvHQ\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  this.on('partialdone', function(flushSource) {\n    destination.partialFlush(flushSource);\n  });\n\n  this.on('endedtimeline', function(flushSource) {\n    destination.endTimeline(flushSource);\n  });\n\n  this.on('reset', function(flushSource) {\n    destination.reset(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nStream.prototype.partialFlush = function(flushSource) {\n  this.trigger('partialdone', flushSource);\n};\n\nStream.prototype.endTimeline = function(flushSource) {\n  this.trigger('endedtimeline', flushSource);\n};\n\nStream.prototype.reset = function(flushSource) {\n  this.trigger('reset', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/parseHeaders.js\n// module id = oJlt\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/cookies.js\n// module id = p1b6\n// module chunks = 0","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/isCancel.js\n// module id = pBtG\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/spread.js\n// module id = pxG4\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_new-promise-capability.js\n// module id = qARP\n// module chunks = 0","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/combineURLs.js\n// module id = qRfI\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dps.js\n// module id = qio6\n// module chunks = 0","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/json/stringify.js\n// module id = qkKv\n// module chunks = 0","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.from.js\n// module id = qyJz\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-object.js\n// module id = sB3e\n// module chunks = 0","var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/enhanceError.js\n// module id = t8qj\n// module chunks = 0","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_species-constructor.js\n// module id = t8x9\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/axios.js\n// module id = tIFN\n// module chunks = 0","/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _aes = require('./aes');\n\nvar _aes2 = _interopRequireDefault(_aes);\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nvar _pkcs7 = require('pkcs7');\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new _aes2['default'](Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = undefined;\n  var init1 = undefined;\n  var init2 = undefined;\n  var init3 = undefined;\n  var encrypted0 = undefined;\n  var encrypted1 = undefined;\n  var encrypted2 = undefined;\n  var encrypted3 = undefined;\n\n  // iteration variable\n  var wordIx = undefined;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\nexports.decrypt = decrypt;\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = (function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    _classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new _asyncStream2['default']();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, (0, _pkcs7.unpad)(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  _createClass(Decrypter, [{\n    key: 'decryptChunk_',\n\n    /**\n     * @private\n     */\n    value: function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }], [{\n    key: 'STEP',\n    get: function get() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n\n  return Decrypter;\n})();\n\nexports.Decrypter = Decrypter;\nexports['default'] = {\n  Decrypter: Decrypter,\n  decrypt: decrypt\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/es5/decrypter.js\n// module id = tLL9\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-includes.js\n// module id = vFc/\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-define.js\n// module id = vIB/\n// module chunks = 0","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/assign.js\n// module id = woOf\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = xGkn\n// module chunks = 0","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine-all.js\n// module id = xH/j\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/dispatchRequest.js\n// module id = xLtR\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = xnc9\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar TYPE_SHARED = 'shared';\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  // The \"shared\" type is used in cases where a stream will contain muxed\n  // video and audio. We could use `undefined` here, but having a string\n  // makes debugging a little clearer.\n  this.type_ = type || TYPE_SHARED;\n\n  this.push = function(data) {\n\n    // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n    // streams will only accept data that matches their type.\n    if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.endTimeline = function() {\n    this.flush();\n    this.trigger('endedtimeline');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n  this.reset = function() {\n    this.discontinuity();\n    this.trigger('reset');\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = zQR9\n// module chunks = 0"],"sourceRoot":""}